import{_ as n,e as a,f as e,o as l}from"./app-7EDMC-9G.js";const t={};function i(p,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="docker-容器引擎" tabindex="-1"><a class="header-anchor" href="#docker-容器引擎"><span>Docker:容器引擎</span></a></h1><h2 id="官方地址" tabindex="-1"><a class="header-anchor" href="#官方地址"><span>官方地址</span></a></h2><ul><li><a href="https://download.docker.com" target="_blank" rel="noopener noreferrer">https://download.docker.com</a></li></ul><h2 id="镜像加速" tabindex="-1"><a class="header-anchor" href="#镜像加速"><span>镜像加速</span></a></h2><ul><li><a href="https://docker.1panel.live" target="_blank" rel="noopener noreferrer">1Panel</a></li></ul><h2 id="windows拉取镜像工具" tabindex="-1"><a class="header-anchor" href="#windows拉取镜像工具"><span>Windows拉取镜像工具</span></a></h2><ul><li><a href="https://github.com/NotGlop/docker-drag" target="_blank" rel="noopener noreferrer">Python Docker Drag</a></li><li><a href="https://gitee.com/wocaa/dpull/releases" target="_blank" rel="noopener noreferrer">Go Dpull</a></li></ul><h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤"><span>安装步骤</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment">#解压Docker文件</span></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> docker-xxx-xxx.tar</span>
<span class="line"><span class="token comment">#可选择将文件移动到环境变量可访问目录</span></span>
<span class="line"><span class="token function">cp</span> docker/* /usr/bin/</span>
<span class="line"><span class="token comment">#新建配置文件并输入示例内容保存</span></span>
<span class="line"><span class="token function">vi</span> /etc/systemd/system/docker.service</span>
<span class="line"><span class="token comment">#添加可执行权限</span></span>
<span class="line"><span class="token function">chmod</span> +x /etc/systemd/system/docker.service</span>
<span class="line"><span class="token comment">#重载unit配置文件</span></span>
<span class="line">systemctl daemon-reload</span>
<span class="line"><span class="token comment">#设置开机自启</span></span>
<span class="line">systemctl <span class="token builtin class-name">enable</span> docker.service</span>
<span class="line"><span class="token comment">#启动守护进程</span></span>
<span class="line">systemctl start <span class="token function">docker</span></span>
<span class="line"><span class="token comment">#停止守护进程</span></span>
<span class="line">systemctl stop <span class="token function">docker</span></span>
<span class="line"><span class="token comment">#重启护进程</span></span>
<span class="line">systemctl restart <span class="token function">docker</span></span>
<span class="line"><span class="token comment">#查看守护进程状态</span></span>
<span class="line">systemctl status <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">Docker Application Container Engine</span></span>
<span class="line"><span class="token key attr-name">Documentation</span><span class="token punctuation">=</span><span class="token value attr-value">https://docs.docker.com</span></span>
<span class="line"><span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">network-online.target firewalld.service</span></span>
<span class="line"><span class="token key attr-name">Wants</span><span class="token punctuation">=</span><span class="token value attr-value">network-online.target</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">Type</span><span class="token punctuation">=</span><span class="token value attr-value">notify</span></span>
<span class="line"><span class="token comment"># the default is not to use systemd for cgroups because the delegate issues still</span></span>
<span class="line"><span class="token comment"># exists and systemd currently does not support the cgroup feature set required</span></span>
<span class="line"><span class="token comment"># for containers run by docker</span></span>
<span class="line"><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/bin/dockerd</span></span>
<span class="line"><span class="token key attr-name">ExecReload</span><span class="token punctuation">=</span><span class="token value attr-value">/bin/kill -s HUP $MAINPID</span></span>
<span class="line"><span class="token comment"># Having non-zero Limit*s causes performance problems due to accounting overhead</span></span>
<span class="line"><span class="token comment"># in the kernel. We recommend using cgroups to do container-local accounting.</span></span>
<span class="line"><span class="token key attr-name">LimitNOFILE</span><span class="token punctuation">=</span><span class="token value attr-value">infinity</span></span>
<span class="line"><span class="token key attr-name">LimitNPROC</span><span class="token punctuation">=</span><span class="token value attr-value">infinity</span></span>
<span class="line"><span class="token key attr-name">LimitCORE</span><span class="token punctuation">=</span><span class="token value attr-value">infinity</span></span>
<span class="line"><span class="token comment"># Uncomment TasksMax if your systemd version supports it.</span></span>
<span class="line"><span class="token comment"># Only systemd 226 and above support this version.</span></span>
<span class="line"><span class="token comment">#TasksMax=infinity</span></span>
<span class="line"><span class="token key attr-name">TimeoutStartSec</span><span class="token punctuation">=</span><span class="token value attr-value">0</span></span>
<span class="line"><span class="token comment"># set delegate yes so that systemd does not reset the cgroups of docker containers</span></span>
<span class="line"><span class="token key attr-name">Delegate</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span></span>
<span class="line"><span class="token comment"># kill only the docker process, not all processes in the cgroup</span></span>
<span class="line"><span class="token key attr-name">KillMode</span><span class="token punctuation">=</span><span class="token value attr-value">process</span></span>
<span class="line"><span class="token comment"># restart the docker process if it exits prematurely</span></span>
<span class="line"><span class="token key attr-name">Restart</span><span class="token punctuation">=</span><span class="token value attr-value">on-failure</span></span>
<span class="line"><span class="token key attr-name">StartLimitBurst</span><span class="token punctuation">=</span><span class="token value attr-value">3</span></span>
<span class="line"><span class="token key attr-name">StartLimitInterval</span><span class="token punctuation">=</span><span class="token value attr-value">60s</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker命令" tabindex="-1"><a class="header-anchor" href="#docker命令"><span>Docker命令</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment">#在线拉取镜像</span></span>
<span class="line"><span class="token function">docker</span> pull 镜像名称</span>
<span class="line"><span class="token comment">#载入镜像文件</span></span>
<span class="line"><span class="token function">docker</span> load <span class="token parameter variable">-i</span> 镜像文件</span>
<span class="line"><span class="token comment">#创建宿主网络容器</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> 容器名称 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--net</span><span class="token operator">=</span>host <span class="token parameter variable">-v</span> 宿主目录:容器目录 镜像名称</span>
<span class="line"><span class="token comment">#创建桥接网络容器</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> 容器名称 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--net</span><span class="token operator">=</span>bridge <span class="token parameter variable">-p</span> 宿主端口:容器端口 <span class="token parameter variable">-v</span> 宿主目录:容器目录 镜像名称</span>
<span class="line"><span class="token comment">#列出容器</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">ps</span></span>
<span class="line"><span class="token comment">#导出镜像</span></span>
<span class="line"><span class="token function">docker</span> save 镜像名称:镜像标签 <span class="token parameter variable">-o</span> 镜像文件</span>
<span class="line"><span class="token comment">#删除指定容器</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">rm</span> 容器编号</span>
<span class="line"><span class="token comment">#创建MacVlan网络</span></span>
<span class="line"><span class="token function">docker</span> network create <span class="token parameter variable">--driver</span> macvlan <span class="token parameter variable">--subnet</span><span class="token operator">=</span><span class="token number">192.168</span>.0.0/24 <span class="token parameter variable">--gateway</span><span class="token operator">=</span><span class="token number">192.168</span>.0.1 <span class="token parameter variable">--ipv6</span> <span class="token parameter variable">--subnet</span><span class="token operator">=</span>fd00::/64 <span class="token parameter variable">--gateway</span><span class="token operator">=</span>fd00::1 <span class="token parameter variable">-o</span> <span class="token assign-left variable">parent</span><span class="token operator">=</span>br-lan macvlan</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="container命令" tabindex="-1"><a class="header-anchor" href="#container命令"><span>Container命令</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment">#更换阿里云源</span></span>
<span class="line"><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span> /etc/apk/repositories</span>
<span class="line"><span class="token comment">#Alpine更新源</span></span>
<span class="line">apk update</span>
<span class="line"><span class="token comment">#Alpine安装Docker命令行</span></span>
<span class="line">apk <span class="token function">add</span> docker-cli</span>
<span class="line"><span class="token comment">#Alpine安装常用命令</span></span>
<span class="line">apk <span class="token function">add</span> busybox-extras</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15)]))}const r=n(t,[["render",i],["__file","Docker.html.vue"]]),o=JSON.parse('{"path":"/wiki/Docker.html","title":"Docker:容器引擎","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"官方地址","slug":"官方地址","link":"#官方地址","children":[]},{"level":2,"title":"镜像加速","slug":"镜像加速","link":"#镜像加速","children":[]},{"level":2,"title":"Windows拉取镜像工具","slug":"windows拉取镜像工具","link":"#windows拉取镜像工具","children":[]},{"level":2,"title":"安装步骤","slug":"安装步骤","link":"#安装步骤","children":[]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"Docker命令","slug":"docker命令","link":"#docker命令","children":[]},{"level":2,"title":"Container命令","slug":"container命令","link":"#container命令","children":[]}],"git":{"updatedTime":1738166571000,"contributors":[{"name":"PZJPZJPZJ","username":"PZJPZJPZJ","email":"68857304+PZJPZJPZJ@users.noreply.github.com","commits":3,"url":"https://github.com/PZJPZJPZJ"}],"changelog":[{"hash":"92da3d222a9d92c0cec98a5ad16ced044d8f3f31","time":1738166571000,"email":"68857304+PZJPZJPZJ@users.noreply.github.com","author":"PZJ","message":"Commit"},{"hash":"de4608db92bb57c5501d037ed0af4785e8085430","time":1737043451000,"email":"68857304+PZJPZJPZJ@users.noreply.github.com","author":"PZJ","message":"Commit"},{"hash":"5121e758b201f9c295cf2e4ea108886d0519e3c1","time":1737042390000,"email":"68857304+PZJPZJPZJ@users.noreply.github.com","author":"PZJ","message":"Initial commit"}]},"filePathRelative":"wiki/Docker.md"}');export{r as comp,o as data};
